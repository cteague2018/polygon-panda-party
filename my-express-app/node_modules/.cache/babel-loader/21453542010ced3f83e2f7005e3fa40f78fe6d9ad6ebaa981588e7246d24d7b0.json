{"ast":null,"code":"var _jsxFileName = \"C:\\\\Polygon Panda Party\\\\polygon-panda-party\\\\my-express-app\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PrizeInformation from './PrizeInformation';\nimport HowItWorks from './HowItWorks';\nimport PrizeDistribution from './PrizeDistribution';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  useEffect(() => {\n    const nextDrawDate = new Date('2024-12-31'); // Example date - adjust as needed  \n\n    const updateTimer = () => {\n      const now = new Date();\n      const difference = nextDrawDate - now;\n      if (difference <= 0) {\n        clearInterval(timer);\n        setTimeLeft({\n          days: 0,\n          hours: 0,\n          minutes: 0,\n          seconds: 0\n        });\n        return;\n      }\n      const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(difference / (1000 * 60 * 60) % 24);\n      const minutes = Math.floor(difference / 1000 / 60 % 60);\n      const seconds = Math.floor(difference / 1000 % 60);\n      setTimeLeft({\n        days,\n        hours,\n        minutes,\n        seconds\n      });\n    };\n    const timer = setInterval(updateTimer, 1000);\n    updateTimer();\n    return () => clearInterval(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bubblegum text-center mb-6\",\n      children: \"Polygon Panda Party\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrizeInformation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HowItWorks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrizeDistribution, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"JN8loWoOBEZBEH4g39D+TmOPcXs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","PrizeInformation","HowItWorks","PrizeDistribution","jsxDEV","_jsxDEV","Home","_s","timeLeft","setTimeLeft","days","hours","minutes","seconds","nextDrawDate","Date","updateTimer","now","difference","clearInterval","timer","Math","floor","setInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Polygon Panda Party/polygon-panda-party/my-express-app/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';  \r\nimport PrizeInformation from './PrizeInformation';  \r\nimport HowItWorks from './HowItWorks';  \r\nimport PrizeDistribution from './PrizeDistribution';  \r\n\r\nconst Home = () => {  \r\n  const [timeLeft, setTimeLeft] = useState({  \r\n    days: 0,  \r\n    hours: 0,  \r\n    minutes: 0,  \r\n    seconds: 0  \r\n  });  \r\n\r\n  useEffect(() => {  \r\n    const nextDrawDate = new Date('2024-12-31'); // Example date - adjust as needed  \r\n\r\n    const updateTimer = () => {  \r\n      const now = new Date();  \r\n      const difference = nextDrawDate - now;  \r\n\r\n      if (difference <= 0) {  \r\n        clearInterval(timer);  \r\n        setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 });  \r\n        return;  \r\n      }  \r\n\r\n      const days = Math.floor(difference / (1000 * 60 * 60 * 24));  \r\n      const hours = Math.floor((difference / (1000 * 60 * 60)) % 24);  \r\n      const minutes = Math.floor((difference / 1000 / 60) % 60);  \r\n      const seconds = Math.floor((difference / 1000) % 60);  \r\n\r\n      setTimeLeft({ days, hours, minutes, seconds });  \r\n    };  \r\n\r\n    const timer = setInterval(updateTimer, 1000);  \r\n    updateTimer();  \r\n\r\n    return () => clearInterval(timer);  \r\n  }, []);  \r\n\r\n  return (  \r\n    <div className=\"p-8\">  \r\n      <h1 className=\"text-4xl font-bubblegum text-center mb-6\">Polygon Panda Party</h1>  \r\n      <PrizeInformation />  \r\n      <HowItWorks />  \r\n      <PrizeDistribution />  \r\n    </div>  \r\n  );  \r\n};  \r\n\r\nexport default Home;  "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAG,IAAIC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;;IAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,GAAG,GAAG,IAAIF,IAAI,CAAC,CAAC;MACtB,MAAMG,UAAU,GAAGJ,YAAY,GAAGG,GAAG;MAErC,IAAIC,UAAU,IAAI,CAAC,EAAE;QACnBC,aAAa,CAACC,KAAK,CAAC;QACpBX,WAAW,CAAC;UAAEC,IAAI,EAAE,CAAC;UAAEC,KAAK,EAAE,CAAC;UAAEC,OAAO,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAE,CAAC,CAAC;QAC1D;MACF;MAEA,MAAMH,IAAI,GAAGW,IAAI,CAACC,KAAK,CAACJ,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MAC3D,MAAMP,KAAK,GAAGU,IAAI,CAACC,KAAK,CAAEJ,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;MAC9D,MAAMN,OAAO,GAAGS,IAAI,CAACC,KAAK,CAAEJ,UAAU,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;MACzD,MAAML,OAAO,GAAGQ,IAAI,CAACC,KAAK,CAAEJ,UAAU,GAAG,IAAI,GAAI,EAAE,CAAC;MAEpDT,WAAW,CAAC;QAAEC,IAAI;QAAEC,KAAK;QAAEC,OAAO;QAAEC;MAAQ,CAAC,CAAC;IAChD,CAAC;IAED,MAAMO,KAAK,GAAGG,WAAW,CAACP,WAAW,EAAE,IAAI,CAAC;IAC5CA,WAAW,CAAC,CAAC;IAEb,OAAO,MAAMG,aAAa,CAACC,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAImB,SAAS,EAAC,0CAA0C;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjFxB,OAAA,CAACJ,gBAAgB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpBxB,OAAA,CAACH,UAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdxB,OAAA,CAACF,iBAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3CID,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}