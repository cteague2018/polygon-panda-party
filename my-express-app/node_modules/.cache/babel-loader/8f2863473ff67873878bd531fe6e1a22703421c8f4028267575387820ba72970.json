{"ast":null,"code":"var _jsxFileName = \"C:\\\\Polygon Panda Party\\\\polygon-panda-party\\\\my-express-app\\\\src\\\\components\\\\Winners.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Sample prize data  \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst prizes = [{\n  id: 1,\n  name: 'Grand Prize',\n  amount: '\\$1,500'\n}, {\n  id: 2,\n  name: 'Second Prize',\n  amount: '\\$1,000'\n}, {\n  id: 3,\n  name: 'Third Prize',\n  amount: '\\$750'\n}, {\n  id: 4,\n  name: 'Fourth Prize',\n  amount: '\\$300'\n}, {\n  id: 5,\n  name: 'Fifth Prize',\n  amount: '\\$200'\n}];\n\n// Function to simulate selecting a random winner  \nconst selectRandomWinner = totalNFTs => {\n  const winnerIndex = Math.floor(Math.random() * totalNFTs) + 1; // Random number between 1 and totalNFTs  \n  return `NFT#${winnerIndex}`; // Return a string representing the NFT winner  \n};\nconst Winners = () => {\n  _s();\n  const [winners, setWinners] = useState([]);\n  const handleSelectWinners = () => {\n    const selectedWinners = prizes.map(prize => ({\n      prize: prize.name,\n      amount: prize.amount,\n      winner: selectRandomWinner(10000) // Simulate selecting a winner from 10,000 NFTs  \n    }));\n    setWinners(selectedWinners);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bubblegum mb-6 text-center\",\n      children: \"\\uD83C\\uDFC6 Current Winners\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSelectWinners,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition-colors\",\n        children: \"Select Winners\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), winners.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-lg p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-4\",\n        children: winners.map((winner, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"flex justify-between items-center p-4 border-b border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: winner.prize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: winner.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-600 font-bold\",\n            children: winner.winner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Winners, \"gIxCDis1mOZHwRLcb9uUSV+rA9Y=\");\n_c = Winners;\nexport default Winners;\nvar _c;\n$RefreshReg$(_c, \"Winners\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","prizes","id","name","amount","selectRandomWinner","totalNFTs","winnerIndex","Math","floor","random","Winners","_s","winners","setWinners","handleSelectWinners","selectedWinners","map","prize","winner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","index","_c","$RefreshReg$"],"sources":["C:/Polygon Panda Party/polygon-panda-party/my-express-app/src/components/Winners.js"],"sourcesContent":["import React, { useState } from 'react';  \r\n\r\n// Sample prize data  \r\nconst prizes = [  \r\n  { id: 1, name: 'Grand Prize', amount: '\\$1,500' },  \r\n  { id: 2, name: 'Second Prize', amount: '\\$1,000' },  \r\n  { id: 3, name: 'Third Prize', amount: '\\$750' },  \r\n  { id: 4, name: 'Fourth Prize', amount: '\\$300' },  \r\n  { id: 5, name: 'Fifth Prize', amount: '\\$200' },  \r\n];  \r\n\r\n// Function to simulate selecting a random winner  \r\nconst selectRandomWinner = (totalNFTs) => {  \r\n  const winnerIndex = Math.floor(Math.random() * totalNFTs) + 1; // Random number between 1 and totalNFTs  \r\n  return `NFT#${winnerIndex}`; // Return a string representing the NFT winner  \r\n};  \r\n\r\nconst Winners = () => {  \r\n  const [winners, setWinners] = useState([]);  \r\n\r\n  const handleSelectWinners = () => {  \r\n    const selectedWinners = prizes.map(prize => ({  \r\n      prize: prize.name,  \r\n      amount: prize.amount,  \r\n      winner: selectRandomWinner(10000), // Simulate selecting a winner from 10,000 NFTs  \r\n    }));  \r\n    setWinners(selectedWinners);  \r\n  };  \r\n\r\n  return (  \r\n    <div className=\"p-8\">  \r\n      <h2 className=\"text-3xl font-bubblegum mb-6 text-center\">üèÜ Current Winners</h2>  \r\n      <div className=\"text-center mb-4\">  \r\n        <button  \r\n          onClick={handleSelectWinners}  \r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition-colors\"  \r\n        >  \r\n          Select Winners  \r\n        </button>  \r\n      </div>  \r\n      {winners.length > 0 && (  \r\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">  \r\n          <ul className=\"space-y-4\">  \r\n            {winners.map((winner, index) => (  \r\n              <li key={index} className=\"flex justify-between items-center p-4 border-b border-gray-200\">  \r\n                <span className=\"font-semibold\">{winner.prize}</span>  \r\n                <span className=\"text-gray-600\">{winner.amount}</span>  \r\n                <span className=\"text-green-600 font-bold\">{winner.winner}</span>  \r\n              </li>  \r\n            ))}  \r\n          </ul>  \r\n        </div>  \r\n      )}  \r\n    </div>  \r\n  );  \r\n};  \r\n\r\nexport default Winners;  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}