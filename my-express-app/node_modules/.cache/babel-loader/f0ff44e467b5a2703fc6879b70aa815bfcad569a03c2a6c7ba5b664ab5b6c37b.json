{"ast":null,"code":"import React,{useState}from'react';import{ethers}from'ethers';import{jsx as _jsx}from\"react/jsx-runtime\";const WalletConnect=_ref=>{let{onConnect}=_ref;const[loading,setLoading]=useState(false);const connectWallet=async()=>{if(loading)return;setLoading(true);try{if(window.ethereum){const accounts=await window.ethereum.request({method:'eth_requestAccounts'});onConnect(accounts[0]);const provider=new ethers.BrowserProvider(window.ethereum);const signer=await provider.getSigner();console.log('Signer address:',await signer.getAddress());}else{alert('Please install MetaMask!');}}catch(error){console.error('Error connecting to wallet:',error);}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"button\",{onClick:connectWallet,disabled:loading,className:\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",children:loading?'Connecting...':'Connect Wallet'});};export default WalletConnect;","map":{"version":3,"names":["React","useState","ethers","jsx","_jsx","WalletConnect","_ref","onConnect","loading","setLoading","connectWallet","window","ethereum","accounts","request","method","provider","BrowserProvider","signer","getSigner","console","log","getAddress","alert","error","onClick","disabled","className","children"],"sources":["C:/Polygon Panda Party/polygon-panda-party/my-express-app/src/components/WalletConnect.js"],"sourcesContent":["import React, { useState } from 'react';    \r\nimport { ethers } from 'ethers';    \r\n\r\nconst WalletConnect = ({ onConnect }) => {    \r\n  const [loading, setLoading] = useState(false);    \r\n\r\n  const connectWallet = async () => {    \r\n    if (loading) return;    \r\n    setLoading(true);    \r\n    try {    \r\n      if (window.ethereum) {    \r\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });    \r\n        onConnect(accounts[0]);    \r\n\r\n        const provider = new ethers.BrowserProvider(window.ethereum);    \r\n        const signer = await provider.getSigner();    \r\n        console.log('Signer address:', await signer.getAddress());    \r\n      } else {    \r\n        alert('Please install MetaMask!');    \r\n      }    \r\n    } catch (error) {    \r\n      console.error('Error connecting to wallet:', error);    \r\n    } finally {    \r\n      setLoading(false);    \r\n    }    \r\n  };    \r\n\r\n  return (    \r\n    <button onClick={connectWallet} disabled={loading} className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\">    \r\n      {loading ? 'Connecting...' : 'Connect Wallet'}    \r\n    </button>    \r\n  );    \r\n};    \r\n\r\nexport default WalletConnect;  "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,MAAM,KAAQ,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhC,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAmB,IAAlB,CAAEC,SAAU,CAAC,CAAAD,IAAA,CAClC,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAS,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAIF,OAAO,CAAE,OACbC,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,GAAIE,MAAM,CAACC,QAAQ,CAAE,CACnB,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC,CAAEC,MAAM,CAAE,qBAAsB,CAAC,CAAC,CACjFR,SAAS,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC,CAEtB,KAAM,CAAAG,QAAQ,CAAG,GAAI,CAAAd,MAAM,CAACe,eAAe,CAACN,MAAM,CAACC,QAAQ,CAAC,CAC5D,KAAM,CAAAM,MAAM,CAAG,KAAM,CAAAF,QAAQ,CAACG,SAAS,CAAC,CAAC,CACzCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAE,KAAM,CAAAH,MAAM,CAACI,UAAU,CAAC,CAAC,CAAC,CAC3D,CAAC,IAAM,CACLC,KAAK,CAAC,0BAA0B,CAAC,CACnC,CACF,CAAE,MAAOC,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACrD,CAAC,OAAS,CACRf,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEL,IAAA,WAAQqB,OAAO,CAAEf,aAAc,CAACgB,QAAQ,CAAElB,OAAQ,CAACmB,SAAS,CAAC,4DAA4D,CAAAC,QAAA,CACtHpB,OAAO,CAAG,eAAe,CAAG,gBAAgB,CACvC,CAAC,CAEb,CAAC,CAED,cAAe,CAAAH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}