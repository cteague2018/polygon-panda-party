{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const WalletConnect=_ref=>{let{onConnect,isLoading}=_ref;const handleConnect=()=>{// Replace with your actual wallet connection logic  \nconst mockAddress='0x1234567890abcdef1234567890abcdef12345678';onConnect(mockAddress);};return/*#__PURE__*/_jsx(\"div\",{children:isLoading?/*#__PURE__*/_jsx(\"p\",{children:\"Connecting...\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleConnect,className:\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",children:\"Connect Wallet\"})});};export default WalletConnect;","map":{"version":3,"names":["React","jsx","_jsx","WalletConnect","_ref","onConnect","isLoading","handleConnect","mockAddress","children","onClick","className"],"sources":["C:/Polygon Panda Party/polygon-panda-party/my-express-app/src/components/WalletConnect.js"],"sourcesContent":["import React from 'react';  \r\n  \r\nconst WalletConnect = ({ onConnect, isLoading }) => {  \r\n  const handleConnect = () => {  \r\n    // Replace with your actual wallet connection logic  \r\n    const mockAddress = '0x1234567890abcdef1234567890abcdef12345678';  \r\n    onConnect(mockAddress);  \r\n  };  \r\n  \r\n  return (  \r\n    <div>  \r\n      {isLoading ? (  \r\n        <p>Connecting...</p>  \r\n      ) : (  \r\n        <button onClick={handleConnect} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">  \r\n          Connect Wallet  \r\n        </button>  \r\n      )}  \r\n    </div>  \r\n  );  \r\n};  \r\n  \r\nexport default WalletConnect;  "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAA8B,IAA7B,CAAEC,SAAS,CAAEC,SAAU,CAAC,CAAAF,IAAA,CAC7C,KAAM,CAAAG,aAAa,CAAGA,CAAA,GAAM,CAC1B;AACA,KAAM,CAAAC,WAAW,CAAG,4CAA4C,CAChEH,SAAS,CAACG,WAAW,CAAC,CACxB,CAAC,CAED,mBACEN,IAAA,QAAAO,QAAA,CACGH,SAAS,cACRJ,IAAA,MAAAO,QAAA,CAAG,eAAa,CAAG,CAAC,cAEpBP,IAAA,WAAQQ,OAAO,CAAEH,aAAc,CAACI,SAAS,CAAC,sEAAsE,CAAAF,QAAA,CAAC,gBAEjH,CAAQ,CACT,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAN,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}