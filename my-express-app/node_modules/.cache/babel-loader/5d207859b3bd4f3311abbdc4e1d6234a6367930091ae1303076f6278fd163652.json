{"ast":null,"code":"var _jsxFileName = \"C:\\\\Polygon Panda Party\\\\polygon-panda-party\\\\my-express-app\\\\src\\\\components\\\\App.js\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home'; // Adjust the path if necessary  \nimport Winners from './components/Winners'; // Ensure this path is correct  \nimport PastWinners from './components/PastWinners'; // Correct import statement  \nimport Navbar from './components/Navbar'; // Assuming you have a Navbar component  \nimport Footer from './components/Footer'; // Assuming you have a Footer component  \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/winners\",\n          component: Winners\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/past-winners\",\n          component: PastWinners\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Home","Winners","PastWinners","Navbar","Footer","jsxDEV","_jsxDEV","App","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","component","_c","$RefreshReg$"],"sources":["C:/Polygon Panda Party/polygon-panda-party/my-express-app/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';  \r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';  \r\nimport Home from './components/Home'; // Adjust the path if necessary  \r\nimport Winners from './components/Winners'; // Ensure this path is correct  \r\nimport PastWinners from './components/PastWinners'; // Correct import statement  \r\nimport Navbar from './components/Navbar'; // Assuming you have a Navbar component  \r\nimport Footer from './components/Footer'; // Assuming you have a Footer component  \r\n\r\nconst App = () => {  \r\n  return (  \r\n    <Router>  \r\n      <div className=\"App\">  \r\n        <Navbar />  \r\n        <Switch>  \r\n          <Route path=\"/\" exact component={Home} />  \r\n          <Route path=\"/winners\" component={Winners} />  \r\n          <Route path=\"/past-winners\" component={PastWinners} />  \r\n          {/* Add more routes as needed */}  \r\n        </Switch>  \r\n        <Footer />  \r\n      </div>  \r\n    </Router>  \r\n  );  \r\n};  \r\n\r\nexport default App;   "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,IAAI,MAAM,mBAAmB,CAAC,CAAC;AACtC,OAAOC,OAAO,MAAM,sBAAsB,CAAC,CAAC;AAC5C,OAAOC,WAAW,MAAM,0BAA0B,CAAC,CAAC;AACpD,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAC1C,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACED,OAAA,CAACT,MAAM;IAAAW,QAAA,eACLF,OAAA;MAAKG,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBF,OAAA,CAACH,MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVP,OAAA,CAACP,MAAM;QAAAS,QAAA,gBACLF,OAAA,CAACR,KAAK;UAACgB,IAAI,EAAC,GAAG;UAACC,KAAK;UAACC,SAAS,EAAEhB;QAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzCP,OAAA,CAACR,KAAK;UAACgB,IAAI,EAAC,UAAU;UAACE,SAAS,EAAEf;QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7CP,OAAA,CAACR,KAAK;UAACgB,IAAI,EAAC,eAAe;UAACE,SAAS,EAAEd;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhD,CAAC,eACTP,OAAA,CAACF,MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACI,EAAA,GAfIV,GAAG;AAiBT,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}