{"ast":null,"code":"var _jsxFileName = \"C:\\\\Polygon Panda Party\\\\polygon-panda-party\\\\my-express-app\\\\src\\\\components\\\\WalletConnect.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers'; // Ensure ethers is imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletConnect = ({\n  onConnect\n}) => {\n  _s();\n  const [walletAddress, setWalletAddress] = useState('');\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum); // Updated for ethers v6\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const signer = provider.getSigner();\n      const address = await signer.getAddress();\n      setWalletAddress(address);\n      onConnect(address);\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      className: \"bg-blue-500 text-white p-2 rounded\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), walletAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected: \", walletAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnect, \"SM6J6Jv3vxLi47+RieKFbfI3nq0=\");\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","WalletConnect","onConnect","_s","walletAddress","setWalletAddress","connectWallet","window","ethereum","provider","BrowserProvider","request","method","signer","getSigner","address","getAddress","alert","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Polygon Panda Party/polygon-panda-party/my-express-app/src/components/WalletConnect.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ethers } from 'ethers'; // Ensure ethers is imported\r\n\r\nconst WalletConnect = ({ onConnect }) => {\r\n  const [walletAddress, setWalletAddress] = useState('');\r\n\r\n  const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      const provider = new ethers.BrowserProvider(window.ethereum); // Updated for ethers v6\r\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      const signer = provider.getSigner();\r\n      const address = await signer.getAddress();\r\n      setWalletAddress(address);\r\n      onConnect(address);\r\n    } else {\r\n      alert('Please install MetaMask!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={connectWallet} className=\"bg-blue-500 text-white p-2 rounded\">\r\n        Connect Wallet\r\n      </button>\r\n      {walletAddress && <p>Connected: {walletAddress}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletConnect;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMC,QAAQ,GAAG,IAAIX,MAAM,CAACY,eAAe,CAACH,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC;MAC9D,MAAMD,MAAM,CAACC,QAAQ,CAACG,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MAChE,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,SAAS,CAAC,CAAC;MACnC,MAAMC,OAAO,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;MACzCX,gBAAgB,CAACU,OAAO,CAAC;MACzBb,SAAS,CAACa,OAAO,CAAC;IACpB,CAAC,MAAM;MACLE,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAQmB,OAAO,EAAEb,aAAc;MAACc,SAAS,EAAC,oCAAoC;MAAAF,QAAA,EAAC;IAE/E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRpB,aAAa,iBAAIJ,OAAA;MAAAkB,QAAA,GAAG,aAAW,EAACd,aAAa;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACrB,EAAA,CAxBIF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA0BnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}