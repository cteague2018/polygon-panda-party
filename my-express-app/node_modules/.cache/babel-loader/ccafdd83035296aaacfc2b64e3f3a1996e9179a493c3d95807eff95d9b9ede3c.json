{"ast":null,"code":"import React from'react';import{ethers}from'ethers';import{jsx as _jsx}from\"react/jsx-runtime\";const WalletConnect=_ref=>{let{onConnect,isLoading}=_ref;const connectWallet=async()=>{if(isLoading)return;try{if(window.ethereum){const accounts=await window.ethereum.request({method:'eth_requestAccounts'});onConnect(accounts[0]);const provider=new ethers.BrowserProvider(window.ethereum);const signer=await provider.getSigner();console.log('Signer address:',await signer.getAddress());}else{alert('Please install MetaMask!');}}catch(error){console.error('Error connecting to wallet:',error);}};return/*#__PURE__*/_jsx(\"button\",{onClick:connectWallet,disabled:isLoading,className:\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",children:isLoading?'Connecting...':'Connect Wallet'});};export default WalletConnect;","map":{"version":3,"names":["React","ethers","jsx","_jsx","WalletConnect","_ref","onConnect","isLoading","connectWallet","window","ethereum","accounts","request","method","provider","BrowserProvider","signer","getSigner","console","log","getAddress","alert","error","onClick","disabled","className","children"],"sources":["C:/Polygon Panda Party/polygon-panda-party/my-express-app/src/components/WalletConnect.js"],"sourcesContent":["import React from 'react';  \r\nimport { ethers } from 'ethers';  \r\n  \r\nconst WalletConnect = ({ onConnect, isLoading }) => {  \r\n  const connectWallet = async () => {  \r\n    if (isLoading) return;  \r\n    try {  \r\n      if (window.ethereum) {  \r\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });  \r\n        onConnect(accounts[0]);  \r\n  \r\n        const provider = new ethers.BrowserProvider(window.ethereum);  \r\n        const signer = await provider.getSigner();  \r\n        console.log('Signer address:', await signer.getAddress());  \r\n      } else {  \r\n        alert('Please install MetaMask!');  \r\n      }  \r\n    } catch (error) {  \r\n      console.error('Error connecting to wallet:', error);  \r\n    }  \r\n  };  \r\n  \r\n  return (  \r\n    <button   \r\n      onClick={connectWallet}   \r\n      disabled={isLoading}   \r\n      className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"  \r\n    >  \r\n      {isLoading ? 'Connecting...' : 'Connect Wallet'}  \r\n    </button>  \r\n  );  \r\n};  \r\n  \r\nexport default WalletConnect;  "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhC,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAA8B,IAA7B,CAAEC,SAAS,CAAEC,SAAU,CAAC,CAAAF,IAAA,CAC7C,KAAM,CAAAG,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAID,SAAS,CAAE,OACf,GAAI,CACF,GAAIE,MAAM,CAACC,QAAQ,CAAE,CACnB,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC,CAAEC,MAAM,CAAE,qBAAsB,CAAC,CAAC,CACjFP,SAAS,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAEtB,KAAM,CAAAG,QAAQ,CAAG,GAAI,CAAAb,MAAM,CAACc,eAAe,CAACN,MAAM,CAACC,QAAQ,CAAC,CAC5D,KAAM,CAAAM,MAAM,CAAG,KAAM,CAAAF,QAAQ,CAACG,SAAS,CAAC,CAAC,CACzCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAE,KAAM,CAAAH,MAAM,CAACI,UAAU,CAAC,CAAC,CAAC,CAC3D,CAAC,IAAM,CACLC,KAAK,CAAC,0BAA0B,CAAC,CACnC,CACF,CAAE,MAAOC,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACrD,CACF,CAAC,CAED,mBACEnB,IAAA,WACEoB,OAAO,CAAEf,aAAc,CACvBgB,QAAQ,CAAEjB,SAAU,CACpBkB,SAAS,CAAC,4DAA4D,CAAAC,QAAA,CAErEnB,SAAS,CAAG,eAAe,CAAG,gBAAgB,CACzC,CAAC,CAEb,CAAC,CAED,cAAe,CAAAH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}